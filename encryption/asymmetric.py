'''
Asymmetric Encryption
---------------------

Asymmetric Encryption is a form of Encryption where keys come in pairs. What one key encrypts, only the other key in the pair can decrypt. The key pairs are often refered to the Private Key and Public Key. The Public Key is used to ENCRYPT and the Private Key is used to DECRYPT. So if you want to have someone encrypt methods that only you can decrypt then you need to send the message write your Public key so that they can encrypt the message with it before sending to you.

Note that everything is derived from the PRIVATE KEY including the corresponding PUBLIC KEY.

Example scenario 1:
------------------

* Bob need to send Anne a message and wants ONLY Anne to be able to read it.
* Bob can encrypt the message using Annes PUBLIC key.
* Bob sends the encrypted message to Anne.
* Anne can now DECRYPT the message using her PRIVATE key.

Example scenario 2:
------------------

* Tony wants to send a message to Lisa
* Tony can encrypt the message using AES
* Tony sends the encrypted message to Lisa
* Lisa asks 'how can I decrypt this?'
* Tony asks Lisa to send over her PUBLIC key
* Tony ENCRYPTS the AES key with Lisa's Public key
* Tony sends the encrypted AES Key to Lisa
* Lisa DECRYPTS the AES key with her PRIVATE KEY.
* Lisa DECRYPTS the message using the AES key

Frequently (but not necessarily), the keys are interchangeable, in the sense that if key A encrypts a message, then B can decrypt it, and if key B encrypts a message, then key A can decrypt it.

Many systems and protocols use Asymmetric Encryption. For example:

* SSL
* TLS
* SSH
* SFTP

For an explaination on HTTPS checkout the python file on [Digital Certificates](./digitalCertificates.py)

Summary

Public Key              | Private Key
------------------------------------------------------
- Share with anyone     | - Cannot share
- Not secret            | - It's secret
- Encrypts Data         | - Decrytp Datta

Asymmetric Encryption
---------------------
- Slow
- Recommend to use RSA = 2048, 4096 bits to generate the private key
- ECC (Elliptic Curve Cryptography)
- Any message encrypted with Bobs Public Key can only be decrypted with Bobs Private key
- Anyone who has Alice Public key can veryfiy the message (signature) could have only been generated by someone with Alics Private Key.
'''